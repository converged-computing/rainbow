syntax = "proto3";

option go_package = "github.com/converged-computing/rainbow/backends/memory/service";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

package service;

service MemoryGraph {
    rpc Register(RegisterRequest) returns (Response) {}
}

message RegisterRequest {
    string name = 1; 
    string payload = 2; 
    string subsystem = 3;
}


// Testing response - the server's response to a request.
message Response {

    // Enum to represent the result types of the operation.
    enum ResultType {
      RESULT_TYPE_UNSPECIFIED = 0;
      RESULT_TYPE_SUCCESS = 1;
      RESULT_TYPE_ERROR = 2;
    }
  
    string request_id = 1;
    int64 message_count = 2;
    int64 messages_processed = 3;
    string processing_details = 4;
  }
  
  // Content represents the message content with metadata.
  message Content {
    // Unique identifier for the message (e.g., uuid).
    string id = 1;
  
    // Actual content of the message in binary format.
    google.protobuf.Any data = 2;
  
    // Additional information about the message in key-value pairs.
    map<string, string> metadata = 3;
  }
  
  // Request represents the request for a method invocation.
  // It includes the content to be sent and a timestamp.
  message Request {
    Content content = 1;
    google.protobuf.Timestamp sent = 2;
  }
  
  